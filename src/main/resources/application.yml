spring:
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI:http://localhost:8080/.well-known/jwks.json}

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${SPRING_MAIL_USERNAME:}
    password: ${SPRING_MAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
    default-encoding: UTF-8

  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/easylink}
    username: ${SPRING_DATASOURCE_USERNAME:postgres}
    password: ${SPRING_DATASOURCE_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: ${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
    open-in-view: ${SPRING_JPA_OPEN_IN_VIEW:true}
    show-sql: ${SPRING_JPA_SHOW_SQL:false}

  flyway:
    enabled: ${SPRING_FLYWAY_ENABLED:true}
    locations: classpath:db/migration
    baseline-on-migrate: ${SPRING_FLYWAY_BASELINE_ON_MIGRATE:true}
    validate-on-migrate: ${SPRING_FLYWAY_VALIDATE_ON_MIGRATE:true}

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

server:
  port: ${SERVER_PORT:8080}

amplitude:
  api-key: ${AMPLITUDE_API_KEY:}
  secret-key: ${AMPLITUDE_SECRET_KEY:}
  exportUrl: https://amplitude.com/api/2/export

vibe:
  upload:
    dir: ${VIBE_UPLOAD_DIR:/data/uploads}

logging:
  level:
    org.springframework.web.servlet.resource: ${LOGGING_LEVEL_RESOURCE:INFO}

app:
  verification:
    base-url: ${APP_VERIFICATION_BASE_URL:http://localhost:8080}
jwt:
  private: ${JWT_PRIVATE:}
